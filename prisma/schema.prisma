// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String 
  session Session[]
  credential Credential[]
  secureNote SecureNote[]
  card Card[]
  wifi Wifi[]

  @@map("users")
}

model Session {
  id Int @id @default(autoincrement())
  userEmail String
  user User @relation(fields: [userEmail], references: [email])
  token String @unique
  createAt DateTime @default(now())
  logoutAt DateTime?

  @@map("sessions")
}

model Credential {
  id Int @id @default(autoincrement())
  userEmail String
  user User @relation(fields: [userEmail], references: [email])
  title String 
  url String
  userName String
  password String
  createAt DateTime @default(now())
  updateAt DateTime? 
  deleteAt DateTime? 

  @@unique([userEmail, title])
  @@map("credentials")
}

model SecureNote {
  id Int @id @default(autoincrement())
  userEmail String
  user User @relation(fields: [userEmail], references: [email])
  title String @db.VarChar(50)
  note String @db.VarChar(1000)
  createAt DateTime @default(now())
  updateAt DateTime? 
  deleteAt DateTime? 

  @@unique([userEmail, title])
  @@map("secure-notes")
}

model Card {
  id Int @id @default(autoincrement())
  userEmail String
  user User @relation(fields: [userEmail], references: [email])
  cardNumber String @unique
  cardName String
  expirationDate DateTime
  cvv String @db.Char(3)
  password String @db.Char(4)
  type CardTypes
  virtual Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime? 
  deleteAt DateTime? 

  @@unique([userEmail, cardNumber])
  @@map("cards")
}

model Wifi {
  id Int @id @default(autoincrement())
  userEmail String
  user User @relation(fields: [userEmail], references: [email])
  title String
  password String
  label String
  createAt DateTime @default(now())
  updateAt DateTime? 
  deleteAt DateTime? 

  @@unique([userEmail, title])
  @@map("wifi")
}

enum CardTypes {
  credito
  debito
  credito_debito
}